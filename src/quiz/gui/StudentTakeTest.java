/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quiz.gui;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import quiz.dao.PerformanceDAO;
import quiz.dao.QuesDAO;
import quiz.pojo.Answer;
import quiz.pojo.AnswerStore;
import quiz.pojo.Performance;
import quiz.pojo.Question;
import quiz.pojo.QuestionStore;
import quiz.pojo.UserLogin;

/**
 *
 * @author yasi
 */
public class StudentTakeTest extends javax.swing.JFrame {
private QuestionStore qs;
private AnswerStore as;
private int qno,pos;
private String exid,subj;
    /**
     * Creates new form StudentTakeTest
     */
    public StudentTakeTest(String subj,String exid) {
        this();
        lblTitle.setText(subj+" Paper");
        this.exid=exid;
        this.subj=subj;
        loadQues(exid);
        showQues();
    }
      public StudentTakeTest() {
        initComponents();
        this.setLocationRelativeTo(null);
        qs=new QuestionStore();
        as=new AnswerStore();
        qno=1;
        lblQno.setText(lblQno.getText()+qno);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblQno = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaQuestion = new javax.swing.JTextArea();
        jrbOpt1 = new javax.swing.JRadioButton();
        jrbOpt2 = new javax.swing.JRadioButton();
        jrbOpt3 = new javax.swing.JRadioButton();
        jrbOpt4 = new javax.swing.JRadioButton();
        btnCancel = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 51, 51));
        lblTitle.setText("Paper");

        lblQno.setBackground(new java.awt.Color(0, 0, 0));
        lblQno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblQno.setForeground(new java.awt.Color(255, 153, 153));
        lblQno.setText("Question No. ");

        txtAreaQuestion.setColumns(20);
        txtAreaQuestion.setRows(5);
        jScrollPane1.setViewportView(txtAreaQuestion);

        jrbOpt1.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrbOpt1);
        jrbOpt1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOpt1.setForeground(new java.awt.Color(255, 153, 153));
        jrbOpt1.setText("Option 1");

        jrbOpt2.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrbOpt2);
        jrbOpt2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOpt2.setForeground(new java.awt.Color(255, 153, 153));
        jrbOpt2.setText("Option 2");

        jrbOpt3.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrbOpt3);
        jrbOpt3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOpt3.setForeground(new java.awt.Color(255, 153, 153));
        jrbOpt3.setText("Option 3");

        jrbOpt4.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrbOpt4);
        jrbOpt4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbOpt4.setForeground(new java.awt.Color(255, 153, 153));
        jrbOpt4.setText("Option 4");

        btnCancel.setBackground(new java.awt.Color(0, 0, 0));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 153, 153));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnPrev.setBackground(new java.awt.Color(0, 0, 0));
        btnPrev.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPrev.setForeground(new java.awt.Color(255, 153, 153));
        btnPrev.setText("Previous");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(0, 0, 0));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 153, 153));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(0, 0, 0));
        btnDone.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDone.setForeground(new java.awt.Color(255, 153, 153));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jrbOpt1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jrbOpt2)
                        .addGap(48, 48, 48))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jrbOpt3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jrbOpt4)
                                .addGap(48, 48, 48))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btnPrev)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQno)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1)
                .addGap(53, 53, 53))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblTitle)
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblQno)
                        .addGap(84, 84, 84)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbOpt1)
                    .addComponent(jrbOpt2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbOpt3)
                    .addComponent(jrbOpt4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnPrev)
                    .addComponent(btnNext)
                    .addComponent(btnDone))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
       String chosenAns=getUserAns();
       if(chosenAns!=null){
           Question ques=qs.getQuestion(pos);
           String corrAns=ques.getCorrectAns();
           Answer newans=new Answer(exid,subj,qno,chosenAns,corrAns);
           Answer ans=as.getAnswerByQno(qno);
           if(ans==null) //not previously added to answerstore can happen because of previous
               as.addAnswer(newans);
           else{
               if(newans.getChosenAns().equals(ans.getChosenAns())==false){ //previously same ans then no need to replace
                   int apos=as.removeAnswer(ans);
                   as.setAnswerAt(apos,newans);
               }
           }
       }
           pos++;
           if(pos>=qs.getCount()){
               pos=0;
           }
           qno++;
           if(qno>qs.getCount())
           { qno=1;
           JOptionPane.showMessageDialog(null,"You have finished all questions.","Finished!",JOptionPane.INFORMATION_MESSAGE);
           }
           lblQno.setText("Question no:"+qno);
           showQues();
             
               
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        // TODO add your handling code here:
        //done ya next last ques ke liye can press anything
       String chosenAns=getUserAns();
       if(chosenAns!=null){
           Question ques=qs.getQuestion(pos);
           String corrAns=ques.getCorrectAns();
           Answer newans=new Answer(exid,subj,qno,chosenAns,corrAns);
           Answer ans=as.getAnswerByQno(qno);
           if(ans==null) //not previously added to answerstore can happen because of previous
               as.addAnswer(newans);
           else{
               if(newans.getChosenAns().equals(ans.getChosenAns())==false){ //previously same ans then no need to replace
                   int apos=as.removeAnswer(ans);
                   as.setAnswerAt(apos,newans);
               }
           }
       }
       int right=0,wrong=0;
       for(Question q:qs.getAllQuestion()){
           int qno1=q.getQno();
           Answer answer=as.getAnswerByQno(qno1);
           if(answer==null)
               continue;
           else{
               String chosenAnswer=answer.getChosenAns();
               String corrAnswer=answer.getCorrectAns();
               if(chosenAnswer.equals(corrAnswer))
                   right++;
               else
                   wrong++;
           }
       }
       String reportcard="Total Questions:"+qs.getCount()+"\nRight Answers:"+right;
       reportcard+="\nWrong Answers:"+wrong;
       reportcard+="\n Unattempted:"+(qs.getCount()-(right+wrong));
       JOptionPane.showMessageDialog(null,reportcard,"Your Result",JOptionPane.INFORMATION_MESSAGE);
       try{
       Performance performance=new Performance(UserLogin.getUserName(),exid,subj,right,wrong,(qs.getCount()-(right+wrong)),(double)right/qs.getCount()*100);
       PerformanceDAO.addPerformance(performance);
       JOptionPane.showMessageDialog(null,"Your performance is successffully added.","Success!",JOptionPane.INFORMATION_MESSAGE);
       
       StudentScreenFrame ssf=new StudentScreenFrame();
       ssf.setVisible(true);
       this.dispose();
       } catch (SQLException ex) {
        Logger.getLogger(StudentTakeTest.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btnDoneActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        StudentScreenFrame ssf=new StudentScreenFrame();
       ssf.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        
       String chosenAns=getUserAns();
       if(chosenAns!=null){
           Question ques=qs.getQuestion(pos);
           String corrAns=ques.getCorrectAns();
           Answer newans=new Answer(exid,subj,qno,chosenAns,corrAns);
           Answer ans=as.getAnswerByQno(qno);
           if(ans==null) //not previously added to answerstore can happen because of previous
               as.addAnswer(newans);
           else{
               if(newans.getChosenAns().equals(ans.getChosenAns())==false){ //previously same ans then no need to replace
                   int apos=as.removeAnswer(ans);
                   as.setAnswerAt(apos,newans);
               }
           }
       }
           pos--;
           if(pos<0){
               pos=0;
               qno=1;
           }
           else{
           qno--;
           }
         
           lblQno.setText("Question no:"+qno);
           showQues();
    }//GEN-LAST:event_btnPrevActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentTakeTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentTakeTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentTakeTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentTakeTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentTakeTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrbOpt1;
    private javax.swing.JRadioButton jrbOpt2;
    private javax.swing.JRadioButton jrbOpt3;
    private javax.swing.JRadioButton jrbOpt4;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txtAreaQuestion;
    // End of variables declaration//GEN-END:variables
private void loadQues(String exid){
        try {
            ArrayList<Question> paper=QuesDAO.getQuestionByExamId(exid);
            for(Question q:paper){
                qs.addQuestion(q);
            }          
}   catch (SQLException ex) {
        Logger.getLogger(StudentTakeTest.class.getName()).log(Level.SEVERE, null, ex);
}}

public void showQues(){
    if(pos==0)
      btnPrev.setEnabled(false);
    else if(pos>0)
       btnPrev.setEnabled(true); 
    
       Question q=qs.getQuestion(pos);
       buttonGroup1.clearSelection(); //after first question there should be no selection
         txtAreaQuestion.setText(q.getQuestion());
            jrbOpt1.setText(q.getAns1());
            jrbOpt2.setText(q.getAns2());
            jrbOpt3.setText(q.getAns3());
            jrbOpt4.setText(q.getAns4());
        Answer ans=as.getAnswerByQno(qno);
        if(ans==null)
            return;
        String chosenAns=ans.getChosenAns();
        switch(chosenAns){
            case "Answer1":
                jrbOpt1.setSelected(true);
                break;
            case "Answer2":
                jrbOpt2.setSelected(true);
                break;
            case "Answer3":
                jrbOpt3.setSelected(true);
                break;
            case "Answer4":
                jrbOpt4.setSelected(true);
                break;
        }
}
public String getUserAns(){
    if(jrbOpt1.isSelected())
        return "Answer1";
    else if(jrbOpt2.isSelected())
        return "Answer2";
     else if(jrbOpt3.isSelected())
        return "Answer3";
     else if(jrbOpt4.isSelected())
        return "Answer4";
  return null;  
}

}
